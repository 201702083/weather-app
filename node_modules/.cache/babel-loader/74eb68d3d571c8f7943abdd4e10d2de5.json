{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/3-1/rc/react/weather-app/src/pages/Cities.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cities() {\n  _s();\n\n  const API_URL = \"http://riotkr.mockable.io/weather-crawlers/cities\";\n  const [cityState, setCityState] = useState([]);\n  useEffect(() => {\n    console.log(\"Cities component mounted!\");\n    getCities();\n  }, []);\n\n  async function getCities() {\n    const cities = await fetch(API_URL).then(rest => rest.json());\n    console.log(cities);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", API_URL, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: JSON.stringify(cityState)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Cities, \"4+ugxCaj/67niFR/vkkWNoEbo1w=\");\n\n_c = Cities;\nexport default Cities;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cities\");","map":{"version":3,"sources":["/Users/macbook/3-1/rc/react/weather-app/src/pages/Cities.jsx"],"names":["useEffect","Cities","API_URL","cityState","setCityState","useState","console","log","getCities","cities","fetch","then","rest","json","JSON","stringify"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;;;AAEA,SAASC,MAAT,GAAiB;AAAA;;AACb,QAAMC,OAAO,GAAG,mDAAhB;AAEA,QAAK,CAACC,SAAD,EAAWC,YAAX,IAA2BC,QAAQ,CAAC,EAAD,CAAxC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAC,IAAAA,SAAS;AACZ,GAHQ,EAGN,EAHM,CAAT;;AAKA,iBAAeA,SAAf,GAA0B;AACtB,UAAMC,MAAM,GAAG,MAAMC,KAAK,CAACR,OAAD,CAAL,CAAeS,IAAf,CAAqBC,IAAD,IAAQA,IAAI,CAACC,IAAL,EAA5B,CAArB;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACH;;AAED,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,sBAAKP,OAAL;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBACKY,IAAI,CAACC,SAAL,CAAeZ,SAAf;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAxBQF,M;;KAAAA,M;AAyBT,eAAeA,MAAf","sourcesContent":["import { useEffect } from \"react\";\n\nfunction Cities(){\n    const API_URL = \"http://riotkr.mockable.io/weather-crawlers/cities\";\n\n    const[cityState,setCityState] = useState([]);\n\n    useEffect(() => {\n        console.log(\"Cities component mounted!\");\n        getCities();\n    }, []);\n\n    async function getCities(){\n        const cities = await fetch(API_URL).then((rest)=>rest.json());\n        console.log(cities);\n    }\n\n    return(\n        <div>\n            <h1>Cities</h1>\n            <p> {API_URL} </p>\n            <div>\n                {JSON.stringify(cityState)}\n            </div>\n        </div>\n    );\n}\nexport default Cities;"]},"metadata":{},"sourceType":"module"}